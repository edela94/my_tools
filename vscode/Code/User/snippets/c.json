{
    "utfunc": {
        "prefix": "utfunc",
        "body": [
            "/**",
            " * Unit test for function \"${1:function_name}()\"",
            " */",
            "void ut_${1:function_name}(void)",
            "{",
            "    uint32 tc;",
            "    char *pName = \"${1:function_name}\";",
            "    UNITTEST_vAckTest(pName);",
            "",
            "    // @StartFunction ${1:function_name}()",
            "",
            "    /**",
            "     **************************************************************************",
            "     * @StartTest ${2:description}",
            "     */",
            "    UNITTEST_vStartTest(NOMINAL_TEST);",
            "    tc = ${3:test_num};",
            "",
            "    ${1:function_name}();",
            "",
            "    // @Expect",
            "    CHECK_BOOL(pName, tc++, TRUE, TRUE);",
            "    // @EndTest",
            "",
            "    // @EndFunction",
            "",
            "} // ut_${1:function_name}()",
            "",
        ],
        "description": "add a unit test function"
    },
    "uttest": {
        "prefix": "uttest",
        "body": [
            "    /**",
            "     **************************************************************************",
            "     * @StartTest ${1:description}",
            "     */",
            "    UNITTEST_vStartTest(NOMINAL_TEST);",
            "    tc = ${2:test_num};",
            "",
            "    ${3:function_name}",
            "",
            "    // @Expect",
            "    // @EndTest",
            "",
        ],
        "description": "add a unit test test case"
    },
    "newmodh": {
        "prefix": "newmodh",
        "body": [
            "/**",
            " * @copyright   Tandem Diabetes Care, Inc. 2020. All rights reserved.",
            " * @file        ${1:module_name}.h",
            " * @brief       Contains function and data prototypes for ${1:module_name}.c",
            " * @author      edelatorre",
            " */",
            "#ifndef ${2:module_name_caps}_H",
            "#define ${2:module_name_caps}_H",
            "",
            "/**",
            " * Includes",
            " */",
            "",
            "",
            "/**",
            " * Type Definitions",
            " */",
            "",
            "",
            "/**",
            " * Public Functions",
            " */",
            "",
            "",
            "#endif // ${2:module_name_caps}_H",
            "",
        ],
        "description": "new module header"
    },
    "newmodc": {
        "prefix": "newmodc",
        "body": [
            "/**",
            " * @copyright   Tandem Diabetes Care, Inc. 2020. All rights reserved.",
            " * @file        ${1:module_name}.c",
            " * @brief       Handles ${2:description}.",
            " * @author      edelatorre",
            " */",
            "#define ${3:module_name_caps}_C_REV   \"$Rev: 000000 $\"",
            "",
            "",
            "/**",
            " * Includes",
            " */",
            "#include \"${1:moduleName}.h\"",
            "",
            "",
            "/**",
            " * Type Definitions",
            " */",
            "",
            "",
            "/**",
            " * Globals",
            " */",
            "",
            "",
            "/**",
            " * Defines",
            " */",
            "",
            "",
            "/**",
            " * Private Function Prototypes",
            " */",
            "",
            "",
            "/**",
            " * Private Functions",
            " */",
            "",
            "",
            "/**",
            " * Public Functions",
            " */",
            "",
            "",
        ],
        "description": "new module source"
    },
    "newfunc": {
        "prefix": "newfunc",
        "body": [
            "/**",
            " * ${1:description}",
            " */",
            "${2:return_type} ${3:function_name}(${4:params})",
            "{",
            "",
            "} // ${3:function_name}()",
            "",
        ],
        "description": "add a function"
    },
    "newparam": {
        "prefix": "newparam",
        "body": [
            "@param[${1:in/out}] ${2:param_name} ${3:description}",
        ],
        "description": "add a doxygen param"
    },
    "newreturn": {
        "prefix": "newreturn",
        "body": [
            "@return ${1:description}",
        ],
        "description": "add a doxygen return"
    },
}
